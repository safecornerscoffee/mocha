<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.safecornerscoffee.mocha.mapper.AccountMapper">

    <resultMap id="AccountResultMap" type="Account">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="password" column="password" />
        <result property="phoneNumber" column="phone_number" />
        <association property="name" javaType="Name">
            <result property="firstName" column="first_name" />
            <result property="lastName" column="last_name" />
        </association>
        <association property="address" javaType="Address">
            <result property="address1" column="address1" />
            <result property="address2" column="address2" />
            <result property="city" column="city"/>
            <result property="state" column="state"/>
            <result property="postalCode" column="postal_code" />
        </association>
        <collection property="authorities" ofType="Authority">
            <result property="authority" column="authority"/>
        </collection>
    </resultMap>

    <select id="getAccountById" resultMap="AccountResultMap">
        SELECT id, email, password, first_name, last_name, address1, address2, city, state, postal_code, phone_number, authority
        FROM account LEFT OUTER JOIN authority a on account.id = a.account_id
        WHERE id = #{id}
    </select>

    <select id="getAccountByEmail" resultMap="AccountResultMap">
        SELECT id, email, password, first_name, last_name, address1, address2, city, state, postal_code, phone_number, authority
        FROM account LEFT OUTER JOIN authority a on account.id = a.account_id
        WHERE email = #{email}
    </select>

    <select id="getAccounts" resultMap="AccountResultMap">
        SELECT id, email, password, first_name, last_name, address1, address2, city, state, postal_code, phone_number, authority
        FROM account LEFT OUTER JOIN authority a on account.id = a.account_id
    </select>

    <insert id="insertAccount" parameterType="Account" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO account
            (email, password, first_name, last_name, address1, address2, city, state, postal_code, phone_number)
        VALUES
            (#{email}, #{password}, #{name.firstName}, #{name.lastName}, #{address.address1}, #{address.address2}, #{address.city}, #{address.state}, #{address.postalCode}, #{phoneNumber})
    </insert>

    <update id="updateAccount" parameterType="Account">
        UPDATE account SET
            email = #{email},
            first_name = #{name.firstName},
            last_name = #{name.lastName},
            address1 = #{address.address1},
            address2 = #{address.address2},
            city = #{address.city},
            state = #{address.state},
            postal_code = #{address.postalCode},
            phone_number = #{phoneNumber}
        WHERE id = #{id}
    </update>

    <delete id="deleteAccount" parameterType="Long">
        DELETE FROM account WHERE id = #{id}
    </delete>

    <insert id="insertAuthority" parameterType="Authority">
        INSERT INTO authority (account_id, authority)
        VALUES (LAST_INSERT_ID(), #{authority})
    </insert>
</mapper>